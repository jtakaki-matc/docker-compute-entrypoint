name: Build release series tagged container images

on:
  push:
    branches:
      - software-5488-moving-dockerfiles
  #pull_request:
  #repository_dispatch:
    #types:
      #- dispatch-build
  #workflow_dispatch:

jobs:
  make-date-tag:
    runs-on: ubuntu-latest
    outputs:
      dtag: ${{ steps.mkdatetag.outputs.dtag }}
    steps:
    - name: make date tag
      id: mkdatetag
      run: echo "::set-output name=dtag::$(date +%Y%m%d-%H%M)"

  base-image-build:
    name: compute-entrypoint:${{ matrix.osg_series }}-${{ matrix.repo }} image build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: False
      matrix:
        repo: ['development', 'testing', 'release']
        osg_series: ['3.6']
    steps:

    - uses: actions/checkout@v2

    - name: Cache base image
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: base-${{ matrix.osg_series }}-${{ matrix.repo }}-buildx-${{ github.sha }}-${{ github.run_id }}
        # allow cache hits from previous runs of the current branch,
        # parent branch, then upstream branches, in that order
        restore-keys: |
          base-${{ matrix.repo }}-buildx-
    
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Build Docker image
      uses: docker/build-push-action@v2.2.2
      with:
        build-args: |
          BASE_YUM_REPO=${{ matrix.repo }}
          BASE_OSG_SERIES=${{ matrix.osg_series }}
        context: ./base
        file: ./base/Dockerfile 
        push: true
        tags: base
        target: base
        cache-to: type=local,mode=max,dest=/tmp/.buildx-cache


  osg-ce-condor-image-build:
    name: ${{ matrix.image }}:${{ matrix.osg_series}}-${{ matrix.repo }} image build
    runs-on: ubuntu-latest
    needs: [make-date-tag, base-image-build]
    strategy:
      fail-fast: False
      matrix:
        repo: ['development', 'testing', 'release']
        image: ['osg-ce-condor']
        osg_series: ['3.6']
    steps:

    - uses: actions/checkout@v2

    - name: Load cached base image
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: base-${{ matrix.osg_series }}-${{ matrix.repo }}-buildx-${{ github.sha }}-${{ github.run_id }}

    - name: Generate tag list
      id: generate-tag-list
      env:
        REPO: ${{ matrix.repo }}
        IMAGE: osg-ce-condor
        OSG_SERIES: ${{ matrix.osg_series }}
        TIMESTAMP: ${{ needs.make-date-tag.outputs.dtag }}
      run: |
        docker_repo=opensciencegrid/$IMAGE
        tag_list=()
        for registry in hub.opensciencegrid.org docker.io; do
          for image_tag in "$OSG_SERIES-$REPO" "$OSG_SERIES-$REPO-$TIMESTAMP"; do
            tag_list+=("$registry/$docker_repo":"$image_tag")
          done
        done
        # This causes the tag_list array to be comma-separated below,
        # which is required for build-push-action
        IFS=,
        echo "::set-output name=taglist::${tag_list[*]}"

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Build and push Docker image
      uses: docker/build-push-action@v2.2.2
      with:
        push: ${{ github.event_name != 'pull_request' && startsWith(github.repository, 'opensciencegrid/') }}
        context: ./osg-ce-condor
        file: ./osg-ce-condor/Dockerfile
        build-args: |
          BASE_YUM_REPO=${{ matrix.repo }}
          BASE_OSG_SERIES=${{ matrix.osg_series }}
        tags: "${{ steps.generate-tag-list.outputs.taglist }}"
        target: ${{ matrix.image }}
        cache-from: type=local,src=/tmp/.buildx-cache

  hosted-ce-image-build:
    name: ${{ matrix.image }}:${{ matrix.osg_series}}-${{ matrix.repo }} image build
    runs-on: ubuntu-latest
    needs: [make-date-tag, base-image-build]
    strategy:
      fail-fast: False
      matrix:
        repo: ['development', 'testing', 'release']
        image: ['hosted-ce']
        osg_series: ['3.6']
    steps:

    - uses: actions/checkout@v2

    - name: Load cached base image
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: base-${{ matrix.osg_series }}-${{ matrix.repo }}-buildx-${{ github.sha }}-${{ github.run_id }}

    - name: Generate tag list
      id: generate-tag-list
      env:
        REPO: ${{ matrix.repo }}
        IMAGE: ${{ matrix.image }}
        OSG_SERIES: ${{ matrix.osg_series }}
        TIMESTAMP: ${{ needs.make-date-tag.outputs.dtag }}
      run: |
        docker_repo=opensciencegrid/$IMAGE
        tag_list=()
        for registry in hub.opensciencegrid.org docker.io; do
          for image_tag in "$OSG_SERIES-$REPO" "$OSG_SERIES-$REPO-$TIMESTAMP"; do
            tag_list+=("$registry/$docker_repo":"$image_tag")
          done
        done
        # This causes the tag_list array to be comma-separated below,
        # which is required for build-push-action
        IFS=,
        echo "::set-output name=taglist::${tag_list[*]}"

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Build and push Docker image
      uses: docker/build-push-action@v2.2.2
      with:
        push: ${{ github.event_name != 'pull_request' && startsWith(github.repository, 'opensciencegrid/') }}
        context: ./hosted-ce
        file: ./hosted-ce/Dockerfile
        build-args: |
          BASE_YUM_REPO=${{ matrix.repo }}
          BASE_OSG_SERIES=${{ matrix.osg_series }}
        tags: "${{ steps.generate-tag-list.outputs.taglist }}"
        target: ${{ matrix.image }}
        cache-from: type=local,src=/tmp/.buildx-cache

